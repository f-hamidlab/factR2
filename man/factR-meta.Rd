% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factRObject-class.R
\name{granges,factR-method}
\alias{granges,factR-method}
\alias{activeSet,factR-method}
\alias{activeSet<-,factR-method}
\alias{listSets,factR-method}
\alias{[[,factR,ANY,ANY-method}
\alias{features,factR-method}
\alias{genes,factR-method}
\alias{gns,factR-method}
\alias{transcripts,factR-method}
\alias{txs,factR-method}
\alias{ase,factR-method}
\alias{domains,factR-method}
\title{Display factR data}
\usage{
\S4method{granges}{factR}(object, ..., set = NULL)

\S4method{activeSet}{factR}(object)

\S4method{activeSet}{factR}(object) <- value

\S4method{listSets}{factR}(object)

\S4method{[[}{factR,ANY,ANY}(x, i)

\S4method{features}{factR}(object, ..., set = NULL)

\S4method{genes}{factR}(object, ...)

\S4method{gns}{factR}(object, ...)

\S4method{transcripts}{factR}(object, ...)

\S4method{txs}{factR}(object, ...)

\S4method{ase}{factR}(object, ...)

\S4method{domains}{factR}(object, ...)
}
\arguments{
\item{object}{factRObject}

\item{...}{One or more features to display. Can be the following:
\itemize{
 \item{gene_id: }{ID of gene to plot}
 \item{gene_name: }{Name of gene to plot}
 \item{transcript_id: }{ID of transcript to plot}
}}

\item{set}{Set metadata to display. Can be "gene", "transcript" or "AS".}

\item{value}{Character value of one of the following: "gene", "transcript" or "AS"}

\item{x}{factRObject}

\item{i}{Character value of one of the following: "gene", "transcript" or "AS"}
}
\description{
Display factR data
}
\examples{
data("factRsample")
granges(factRsample)
data("factRsample")
activeSet(factRsample)
data("factRsample")
activeSet(factRsample) <- "transcript"
data("factRsample")
listSets(factRsample)
data("factRsample")
factRsample[["gene"]]
data("factRsample")
features(factRsample)
features(factRsample, "Dab2", set="gene")
data("factRsample")
genes(factRsample, "Dab2")
data("factRsample")
gns(factRsample, "Dab2")
data("factRsample")
transcripts(factRsample, "Dab2")
data("factRsample")
txs(factRsample, "Dab2")
data("factRsample")
ase(factRsample, "Dab2")
data("factRsample")
factRsample <- buildCDS(factRsample)
factRsample <- getAAsequence(factRsample)
factRsample <- predictDomains(factRsample, "Dab2")
domains(factRsample, "Dab2")
}
