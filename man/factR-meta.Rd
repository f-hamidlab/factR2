% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factRObject-class.R
\name{factR-meta}
\alias{factR-meta}
\alias{activeSet,factR-method}
\alias{activeSet<-,factR-method}
\alias{listSets,factR-method}
\alias{features,factR-method}
\alias{genes,factR-method}
\alias{gns,factR-method}
\alias{transcripts,factR-method}
\alias{txs,factR-method}
\alias{ase,factR-method}
\alias{domains,factR-method}
\title{Display factR2 object data}
\usage{
\S4method{granges}{factR}(object, ..., set = NULL)

\S4method{activeSet}{factR}(object)

\S4method{activeSet}{factR}(object) <- value

\S4method{listSets}{factR}(object)

\S4method{features}{factR}(object, ..., set = NULL, show_more = FALSE)

\S4method{genes}{factR}(object, ..., show_more = FALSE)

\S4method{gns}{factR}(object, ..., show_more = FALSE)

\S4method{transcripts}{factR}(object, ..., show_more = FALSE)

\S4method{txs}{factR}(object, ..., show_more = FALSE)

\S4method{ase}{factR}(object, ..., show_more = FALSE)

\S4method{domains}{factR}(object, ...)
}
\arguments{
\item{object}{factRObject}

\item{...}{One or more features to display. Can be the following:
\itemize{
 \item{gene_id: }{ID of gene to plot}
 \item{gene_name: }{Name of gene to plot}
 \item{transcript_id: }{ID of transcript to plot}
}}

\item{set}{Set metadata to display. Can be "gene", "transcript" or "AS".}

\item{value}{Character value of one of the following: "gene", "transcript" or "AS"}
}
\value{
\itemize{
 \item{`granges`: }{GenomicRanges object of selected features}
 \item{`activeSet` and `listSets`: }{Character value/vector}
 \item{All other functions: }{Tibble dataframe containing metadata of selected features}
}
}
\description{
A factRObject-class contains different types of data at the gene, transcript,
 alternative splicing (AS) and protein domain levels. The functions below are
 designed to display specific contents of a factRObject.
}
\examples{
### Load sample factRObject
data("factRsample")

## Prints out activeSet
activeSet(factRsample)

## Change activeSet
activeSet(factRsample) <- "transcript"

## Returns coordinates and metadata of features as a GenomicRanges object
granges(factRsample)   # from activeSet
granges(factRsample, "Dab2")   # specific features
granges(factRsample, "Dab2", set = "gene")   # specific features from different Set

## Returns metadata of features
features(factRsample)   # from activeSet
features(factRsample, "Dab2")   # specific features
features(factRsample, "Dab2", set = "gene")   # specific features from different Set

### This is the same as:
genes(factRsample, "Dab2")


## To return protein-coding domains, the protein-coding domains need to be predicted first:
factRsample <- buildCDS(factRsample)
factRsample <- getAAsequence(factRsample)
factRsample <- predictDomains(factRsample, "Dab2")

## Then, the domains of the selected gene can be printed as such:
domains(factRsample, "Dab2")

## All outputs can be assigned to a variable and manipulated further using other functions:
ase(factRsample) \%>\% dplyr::filter(AStype == "CE")


}
