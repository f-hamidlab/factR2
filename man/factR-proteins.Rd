% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein-methods.R
\name{factR-proteins}
\alias{factR-proteins}
\alias{predictDomains,factR-method}
\title{Protein-level functions}
\usage{
\S4method{getAAsequence}{factR}(object, verbose = FALSE)

\S4method{predictDomains}{factR}(object, ..., database = "superfamily", ncores = 4)
}
\arguments{
\item{object}{factRObject}

\item{...}{One or more features to display. Can be the following:
\itemize{
 \item{gene_id: }{ID of gene to plot}
 \item{gene_name: }{Name of gene to plot}
 \item{transcript_id: }{ID of transcript to plot}
}}

\item{database}{HMM database to query. Can be "superfamily" or "pfam".}

\item{ncores}{Number of cores to run prediction on}

\item{factRObject}{}
}
\value{
Updated factRObject.
`getAAsequence` stores an AAStringSet object in the factRObject class.

`predictDomains` stores a dataframe of predicted protein domains in the factRObject.
}
\description{
Upon building CDS information on custom transcripts, one can query the translated
sequence of protein-coding transcripts and determine the encoding protein
domains and motifs.

`predictDomains` queries the HMM database ({\url{https://www.ebi.ac.uk/Tools/hmmer/search/hmmscan}})
for known protein domain families using either the "superfamily" or "pfam"
database. This prediction can be performed globally on all protein coding
transcripts or on specific transcript families (recommended).
}
\examples{
## Load sample factRObject and build CDS
data(factRsample)
factRsample <- buildCDS(factRsample)

## Get peptide sequences
factRsample <- getAAsequence(factRsample)

## Predict domains of gene families
factRsample <- predictDomains(factRsample, "Osmr")

## Predict domains of entire coding transcriptome
### This takes some time. Increase `ncores` where necessary
factRsample <- predictDomains(factRsample)
}
